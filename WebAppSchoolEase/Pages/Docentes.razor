@page "/docente"
@using WebAppSchoolEase.Models;
@using WebAppSchoolEase.Services;
@inject ILogger<Docentes> Logger;

@inject IDocenteService docenteService;
@inject IJSRuntime JSRumtime;
<PageTitle>docente</PageTitle> 

@*
    formulario para gestionar docente
*@
<div>
    <h3>Gestionar Docentes</h3>
    <EditForm Model="@docente" OnSubmit="@Save">
        <div class="row">
            <div class="col-4 form-group">
                <label for="Primernombre" class="col-form-label"> Primer Nombre</label>
                <InputText id="Primernombre" class="form-control" @bind-Value="docente.PrimerNombre" required />
                <label for="Segundonombre" class="col-form-label"> Segundo Nombre</label>
                <InputText id="Segundonombre" class="form-control" @bind-Value="docente.SegundoNombre" required />
                <label for="Primerapellido" class="col-form-label"> Primer Apellido</label>
                <InputText id="Primerapellido" class="form-control" @bind-Value="docente.PrimerApellido" required />
                <label for="Segundoapellido" class="col-form-label"> Segundo Apellido</label>
                <InputText id="Segundoapellido" class="form-control" @bind-Value="docente.SegundoApellido" required />
                <label for="direccion" class="col-form-label">Direcci&oacuten de residencia</label>
                <InputText id="direccion" class="form-control" @bind-Value="docente.direccion" required />
            </div>
            <div class="col-4 form-group">
               
                <label for="telefono" class="col-form-label">Tel&eacutefono</label>
                <InputText id="telefono" class="form-control" @bind-Value="docente.telefono" required />
                <label for="nivelacademico" class="col-form-label">Nivel acad&eacutemico</label>
                <InputSelect id="nivelacademico" class="form-control" @bind-Value="docente.nivelAcademico">
                    <option value="0">Pregrado</option>
                    <option value="1">Posgrado</option>
                </InputSelect>
                <label for="profesion" class="col-form-label">Profesi&oacuten</label>
                <InputText id="profesion" class="form-control" @bind-Value="docente.Profesion" required />
                <label for="correoElectronico" class="col-form-label">Correo Electr&oacutenico</label>
                <InputText id="correoElectronico" class="form-control" @bind-Value="docente.correoElectronico" required />
                <label for="celular" class="col-form-label">Celular</label>
                <InputText id="celular" class="form-control" @bind-Value="docente.celular" required />
            </div>
            <div class="col-4 form-group">
                
                <label for="fechaNacimiento" class="col-form-label">Fecha de Nacimiento</label>
                <InputDate id="fechaNacimiento" class="form-control" @bind-Value="docente.fechadenacimiento" required />
                <label for="tipoDocumento" class="col-form-label">Tipo de Documento</label>
                <InputSelect id="tipoDocumento" class="form-control" @bind-Value="docente.tipoDocumento">
                    <option value="0">Seleccione tipo de documento</option>
                    <option value="1">Cédula de Ciudadanía</option>
                    <option value="2">Tarjeta de identidad</option>
                </InputSelect>
                <label for="numeroDocumento" class="col-form-label">N&uacutemero de documento</label>
                <InputText id="numeroDocumento" class="form-control" @bind-Value="docente.NumeroDocumento" required />
                <label for="tipoDocumento" class="col-form-label">Tipo de sexo</label>
                <InputSelect id="sexo" class="form-control" @bind-Value="docente.sexo">
                    <option value="0">Seleccione su sexo</option>
                    <option value="1">Femenino</option>
                    <option value="2">Masculino</option>
                </InputSelect>
                <hr />
                <button class="btn btn-primary" type="submit">Guardar</button>
            </div>
            
            

        </div>
        
    </EditForm>
    <hr />

</div>

@code {
    private Docente docente = new();



    private async Task Save()
    {
        await docenteService.Add(docente);
        StateHasChanged();
    }
}
@*
tabla para mostrar periodos academicos
*@
@if (docentes?.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Fecha Inicio</th>
                <th>Fecha Fin</th>
                <th>Estado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var docente in docentes)
            {

                <tr>
                    <td>@docente.PrimerNombre</td>
                    <td>@docente.SegundoNombre</td>
                    <td>@docente.PrimerApellido</td>
                    <td>@docente.SegundoApellido</td>
                    <td>@docente.direccion</td>
                    <td>@docente.telefono</td>
                    <td>@docente.correoElectronico</td>
                    <td>@docente.celular</td>
                    <td>@docente.nivelAcademico</td>
                    <td>@docente.NumeroDocumento</td>
                    <td>@docente.Profesion</td>
                    <td>@docente.SegundoNombre</td>
                    @if (docente.tipoDocumento.Equals(0))
                    {
                        <td>Cédula</td>
                    }
                    else
                    {
                        <td>Tarjeta de identidad</td>
                    }
                    @if (docente.sexo.Equals(0))
                    {
                        <td>Femenino</td>
                    }
                    else
                    {
                        <td>Masculino</td>
                    }

                    <td>
                        <button class="btn btn-primary" @onclick="() => ShowEditForm(docente)">Editar</button>

                        <button class="btn btn-danger" @onclick="() => Delete(docente.Id)">Eliminar</button>
                    </td>
                </tr>
            }


        </tbody>
    </table>
    <EditForm Model="@editDocente" OnValidSubmit="@SaveEditForm" OnReset="@CloseEditForm">
        <ValidationSummary />

        <div class="form-group">
            <label for="Primernombre">Nombre:</label>
            <InputText id="Primernombre" class="form-control" @bind-Value="editDocente.PrimerNombre" />
            <ValidationMessage For="@(() => editDocente.PrimerNombre)" />
        </div>

        <div class="form-group">
            <label for="Segundonombre">Nombre:</label>
            <InputText id="Segundonombre" class="form-control" @bind-Value="editDocente.SegundoNombre" />
            <ValidationMessage For="@(() => editDocente.SegundoNombre)" />
        </div>
        <div class="form-group">
            <label for="Primerapellido">Nombre:</label>
            <InputText id="Primerapellido" class="form-control" @bind-Value="editDocente.PrimerApellido" />
            <ValidationMessage For="@(() => editDocente.PrimerApellido)" />
        </div>
        <div class="form-group">
            <label for="Segundoapellido">Nombre:</label>
            <InputText id="Segundoapellido" class="form-control" @bind-Value="editDocente.SegundoApellido" />
            <ValidationMessage For="@(() => editDocente.SegundoApellido)" />
        </div>

        <div class="form-group">
            <label for="direccion">Fecha Inicio:</label>
            <InputDate id="direccion" class="form-control" @bind-Value="editDocente.direccion" />
            <ValidationMessage For="@(() => editDocente.direccion)" />
        </div>

        <div class="form-group">
            <label for="telefono">Fecha Fi:</label>
            <InputDate id="telefono" class="form-control" @bind-Value="editDocente.telefono" />
            <ValidationMessage For="@(() => editDocente.telefono)" />
        </div>
        <div class="form-group">
            <label for="nivelacademico">Fecha Fi:</label>
            <InputDate id="nivelacademico" class="form-control" @bind-Value="editDocente.nivelAcademico" />
            <ValidationMessage For="@(() => editDocente.nivelAcademico)" />
        </div>
        <div class="form-group">
            <label for="correoelectronico">Fecha Fi:</label>
            <InputDate id="correoelectronico" class="form-control" @bind-Value="editDocente.correoElectronico" />
            <ValidationMessage For="@(() => editDocente.correoElectronico)" />
        </div>
        <div class="form-group">
            <label for="celular">Fecha Fi:</label>
            <InputDate id="celular" class="form-control" @bind-Value="editDocente.celular" />
            <ValidationMessage For="@(() => editDocente.celular)" />
        </div>
        <div class="form-group">
            <label for="profesion">Fecha Fi:</label>
            <InputDate id="profesion" class="form-control" @bind-Value="editDocente.Profesion" />
            <ValidationMessage For="@(() => editDocente.Profesion)" />
        </div>

        <div class="form-group">
            <label for="tipoDocumento">Tipo Documento:</label>


            <select id="tipoDocumento" class="form-control" @bind="editDocente.tipoDocumento">

                <option value="0">Cédula</option>
                <option value="1">Tarjeta de identidad</option>
            </select>
            <ValidationMessage For="@(() => editDocente.tipoDocumento)" />
        </div>
        <div class="form-group">
            <label for="numerodocumento">Nombre:</label>
            <InputText id="numerodocumento" class="form-control" @bind-Value="editDocente.NumeroDocumento" />
            <ValidationMessage For="@(() => editDocente.NumeroDocumento)" />
        </div>
        <div class="form-group">
            <label for="fechanacimiento">Nombre:</label>
            <InputDate id="fechanacimiento" class="form-control" @bind-Value="editDocente.fechadenacimiento" />
            <ValidationMessage For="@(() => editDocente.fechadenacimiento)" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary mr-2">Guardar</button>
            <button type="button" class="btn btn-secondary" @onclick="@CloseEditForm">Cancelar</button>
        </div>
    </EditForm>

}

else
{
    <p><em>No hay docentes registrados</em></p>
}


@code {
    private List<Docente>? docentes;
    private bool showEditForm = false;
    private Docente DocenteEdit = new Docente(); // Variable para almacenar la información de la fila que se está editando
    public Docente? editDocente;


    protected override async Task OnInitializedAsync()
    {
        docentes = await GetDocente();

    }

    private async Task<List<Docente>> GetDocente()
    {
        return await docenteService.Get();
    }




    private async Task Delete(int id)
    {
        if (await JSRumtime.InvokeAsync<bool>("confirm", $"¿Estás seguro que quieres eliminar el período académico")) { }

        await docenteService.Delete(id);
        await GetDocente();
    }
    private void ShowEditForm(Docente docente)
    {
        editDocente = docente;
        showEditForm = true;
    }


    private async Task SaveEditForm()
    {
        await docenteService.Update(DocenteEdit); // Envía una solicitud PUT al servidor para actualizar la información del período académico
        showEditForm = false; // Oculta el formulario de edición
        await GetDocente(); // Actualiza la lista de períodos académicos

    }

    private void CloseEditForm()
    {
        showEditForm = false; // Oculta el formulario de edición
    }
}


